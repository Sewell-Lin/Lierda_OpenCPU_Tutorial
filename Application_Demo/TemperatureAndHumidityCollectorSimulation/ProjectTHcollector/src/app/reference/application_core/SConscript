#===============================================================================
# @brief    Scons make file
# Copyright (c) 2016 NEUL LIMITED
#===============================================================================

Import('env')
import os
from EnvironmentUtils import NeulTargetConfig, BuildType
from ModuleUtils import *

# Export headers.
env.Append(CPPPATH = [os.path.join(Dir('.').srcnode().abspath)])
env.Append(CPPPATH = [ os.path.join(Dir('.').srcnode().abspath, 'version' ) ])

private_includes = [ Dir('.').srcnode().abspath, os.path.join(Dir('.').srcnode().abspath, 'version') ]
additional_src_files = Glob('*.s')

source_files = []
source_files.extend(Glob('*.c'))
source_files.extend(Glob('*.s'))

if NeulTargetConfig.get_build_type(env) == BuildType.DOXYGEN:
    mod = Module('application_core', env, private_inc_dirs=private_includes, additional_release_files=additional_src_files)
    products = mod.build(env)

else:
    if NeulTargetConfig.get_build_type(env) == BuildType.SOURCE_PACKAGE:
        source_files.extend(Glob('*.h'))
        source_files.extend(Glob(os.path.join('version','*.h')))

    products = source_files

Return ('products')