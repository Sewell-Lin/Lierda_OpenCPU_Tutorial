/*
 *********************************************************************************************************
 *
 *                           OpenCPU开发环境介绍
 *
 * 
 *********************************************************************************************************
*/
 【开发软件】
	- eclipse

【编译方法】
		- 选中工程目录，单机鼠标右键->Build project
		- 若编译报错，执行清除上次编译然后再进行编译
		- 清除上次编译方法：选中工程目录，单机鼠标右键->Clean project

【例程文件夹说明】
		这里只对部分目录说明

		├─build_scons :   存放编译生成的一些文件和编译工具链信息
		│  └─arm
		│  	  └─Hi2115: 
		│        └─reference
		|			└─application_core：	编译生成的文件，其中application.bin为编译后生成的应用核二进制文件
		├─src    :  代码目录
		│  ├─app
		|  |  └─reference
		|  |       └─application_core :	主函数入口，客户也可以把应用代码放在这里（在这个文件夹下创建xx.c或xx.h文件即可）
		|  ├─lib: 应用代码存放目录
		|    └─Demo:
		|       ├─private：应用代码c文件目录
		|       ├─public ：应用代码头文件目录
		|        └─SConscript：配置文件，必须包含
		└─SConscript：编译配置文件，在lib文件夹下添加用户代码时需配置此文件 

/**
  ******************************************************************************
  *                           NB86 EVK开发板例程功能说明
  *
  *  例程名称: GPIO-LED流水灯
  *   
  ******************************************************************************
  * 说明：
  * 本例程配套Lierda NB86 EVK使用。
  * 
  * 淘宝：
  * 论坛：http://bbs.lierda.com/forum.php?mod=forumdisplay&fid=46
  ******************************************************************************
  */
 【1】例程简介
  使用Lierda OpenCPU库函数实现LED流水灯效果。通过这个例程熟悉Lierda OpenCPU库函数编程思想。

  	OpenCPU可提供的GPIO共有19个IO引脚可用，这些IO引脚可以用作最简单的控制电平控制，可以设置为
输出高电平，也可以设置为输入模式，读取这个IO引脚的电平(比如用于按键状态读取)。  本例程我们调用
Lierda OpenCPU GPIO库函数方法来实现对IO引脚的输出高低电平进行控制实现LED流水灯的效果。
 通过开发板原理图我们可以知道：
	LED10灯正极接在NB_3V3(3V)上，负极通过一个电阻接在NB86-G模组的PIN_25引脚上，如果我们控制
PIN_25引脚为低电平(0V)的话，此时电路存在电压差，电流从LED10正极流向负极，此时LED10灯是亮的；另外，
如果我们控制PIN_25引脚为高电平(3V)的话，此时电路没有电流，所以LED10灯是灭的。如此看来，只要我们控
制PIN_25引脚的高或者低电平就可以自由控制LED10灯的亮灭。 
LED11和LED12控制原理与LED1是相同的。 
LED11-----PIN_23
LED12-----PIN_22
  	