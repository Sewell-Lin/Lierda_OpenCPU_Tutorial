#===============================================================================
# @brief    Scons make file
# Copyright (c) 2016 NEUL LIMITED
#===============================================================================

Import('env')
import os
from EnvironmentUtils import NeulTargetConfig, BuildType
from ModuleUtils import Module

module = 'config'
module_dirs = Glob(os.path.join('*', 'SConscript'))

if NeulTargetConfig.get_build_type(env) in [BuildType.SOURCE_PACKAGE, BuildType.DOXYGEN]:
    additional_release_files = [
        File('SConscript.headers'),
        File('SConscript.package'),
        File('SConscript.memconfig'),
    ]

    for srcdir in (env['ADDITIONAL_SRC'] + ['neul']):
        streeenv = env.Clone(SRCDIR=srcdir)
        additional_release_files.append(streeenv.Glob('sw_modules/$SRCDIR/$CORE/*.yml'))
        additional_release_files.append(streeenv.Glob('keys/$SRCDIR/$CORE/*.yml'))

    mod = Module(module, env,
                    sources = [],
                    public_inc_dirs = [],
                    additional_release_files = additional_release_files,
                    private_inc_dirs = [])
    for file in module_dirs:
       mod.add_module(SConscript(file, {'env': env }))

    product = mod.build(env)
    Return ('product')
else:
    # Gather all source files
    source_files = []
    for file in module_dirs:
        source_files.extend( SConscript(file, {'env': env }) )
    Return ('source_files')

